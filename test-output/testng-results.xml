<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="69057" started-at="2017-07-21T16:32:25Z" finished-at="2017-07-21T16:33:34Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="69057" started-at="2017-07-21T16:32:25Z" finished-at="2017-07-21T16:33:34Z">
      <class name="test.FlightsBookmark">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="beforeMethod" is-config="true" duration-ms="7333" started-at="2017-07-21T18:32:25Z" finished-at="2017-07-21T18:32:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FlightsBookmark.RoundtripTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="RoundtripTest()[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="RoundtripTest" duration-ms="12502" started-at="2017-07-21T18:32:33Z" finished-at="2017-07-21T18:32:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RoundtripTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterMethod" is-config="true" duration-ms="1212" started-at="2017-07-21T18:32:45Z" finished-at="2017-07-21T18:32:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RoundtripTest status=SUCCESS method=FlightsBookmark.RoundtripTest()[pri:0, instance:test.FlightsBookmark@f6c48ac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.FlightsBookmark.RoundtripTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="beforeMethod" is-config="true" duration-ms="5125" started-at="2017-07-21T18:32:46Z" finished-at="2017-07-21T18:32:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FlightsBookmark.oneWayTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="oneWayTest()[pri:1, instance:test.FlightsBookmark@f6c48ac]" name="oneWayTest" duration-ms="12296" started-at="2017-07-21T18:32:52Z" finished-at="2017-07-21T18:33:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneWayTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterMethod" is-config="true" duration-ms="879" started-at="2017-07-21T18:33:04Z" finished-at="2017-07-21T18:33:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=oneWayTest status=SUCCESS method=FlightsBookmark.oneWayTest()[pri:1, instance:test.FlightsBookmark@f6c48ac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.FlightsBookmark.oneWayTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="beforeMethod" is-config="true" duration-ms="5124" started-at="2017-07-21T18:33:05Z" finished-at="2017-07-21T18:33:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FlightsBookmark.multicityTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="multicityTest()[pri:2, instance:test.FlightsBookmark@f6c48ac]" name="multicityTest" duration-ms="23204" started-at="2017-07-21T18:33:10Z" finished-at="2017-07-21T18:33:33Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: //span[@class='title-city-text'] (tried for 5 second(s) with 500 MILLISECONDS interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //span[@class='title-city-text'] (tried for 5 second(s) with 500 MILLISECONDS interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:232)
	at test.FlightsBookmark.checkVerificationText(FlightsBookmark.java:139)
	at test.FlightsBookmark.multicityTest(FlightsBookmark.java:129)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.xpath: //span[@class='title-city-text']
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'DESKTOP-I6AMPCE', ip: '192.168.0.31', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_131'
Driver info: driver.version: unknown
	at org.openqa.selenium.support.ui.ExpectedConditions.lambda$findElement$0(ExpectedConditions.java:883)
	at java.util.Optional.orElseThrow(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:882)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:44)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:206)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:202)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:209)
	... 27 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multicityTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterMethod" is-config="true" duration-ms="1313" started-at="2017-07-21T18:33:33Z" finished-at="2017-07-21T18:33:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=multicityTest status=FAILURE method=FlightsBookmark.multicityTest()[pri:2, instance:test.FlightsBookmark@f6c48ac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.FlightsBookmark.multicityTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterClass" is-config="true" duration-ms="46" started-at="2017-07-21T18:33:34Z" finished-at="2017-07-21T18:33:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.FlightsBookmark -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>

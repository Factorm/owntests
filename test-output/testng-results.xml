<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="60226" started-at="2017-07-21T16:48:49Z" finished-at="2017-07-21T16:49:49Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="60226" started-at="2017-07-21T16:48:49Z" finished-at="2017-07-21T16:49:49Z">
      <class name="test.FlightsBookmark">
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="beforeMethod" is-config="true" duration-ms="5932" started-at="2017-07-21T18:48:49Z" finished-at="2017-07-21T18:48:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FlightsBookmark.RoundtripTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="RoundtripTest()[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="RoundtripTest" duration-ms="11473" started-at="2017-07-21T18:48:55Z" finished-at="2017-07-21T18:49:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RoundtripTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterMethod" is-config="true" duration-ms="1157" started-at="2017-07-21T18:49:06Z" finished-at="2017-07-21T18:49:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=RoundtripTest status=SUCCESS method=FlightsBookmark.RoundtripTest()[pri:0, instance:test.FlightsBookmark@f6c48ac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.FlightsBookmark.RoundtripTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="beforeMethod" is-config="true" duration-ms="5485" started-at="2017-07-21T18:49:08Z" finished-at="2017-07-21T18:49:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FlightsBookmark.oneWayTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="oneWayTest()[pri:1, instance:test.FlightsBookmark@f6c48ac]" name="oneWayTest" duration-ms="9689" started-at="2017-07-21T18:49:13Z" finished-at="2017-07-21T18:49:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- oneWayTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterMethod" is-config="true" duration-ms="825" started-at="2017-07-21T18:49:23Z" finished-at="2017-07-21T18:49:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=oneWayTest status=SUCCESS method=FlightsBookmark.oneWayTest()[pri:1, instance:test.FlightsBookmark@f6c48ac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.FlightsBookmark.oneWayTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="beforeMethod" is-config="true" duration-ms="6161" started-at="2017-07-21T18:49:24Z" finished-at="2017-07-21T18:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.FlightsBookmark.multicityTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="multicityTest()[pri:2, instance:test.FlightsBookmark@f6c48ac]" name="multicityTest" duration-ms="18610" started-at="2017-07-21T18:49:30Z" finished-at="2017-07-21T18:49:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multicityTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterMethod" is-config="true" duration-ms="834" started-at="2017-07-21T18:49:48Z" finished-at="2017-07-21T18:49:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=multicityTest status=SUCCESS method=FlightsBookmark.multicityTest()[pri:2, instance:test.FlightsBookmark@f6c48ac] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void test.FlightsBookmark.multicityTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.FlightsBookmark@f6c48ac]" name="afterClass" is-config="true" duration-ms="36" started-at="2017-07-21T18:49:49Z" finished-at="2017-07-21T18:49:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.FlightsBookmark -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
